-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ZynqBF_2tx_fpga\ZynqBF_2t_ip_src_store_index.vhd
-- Created: 2019-02-08 23:33:51
-- 
-- Generated by MATLAB 9.5 and HDL Coder 3.13
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ZynqBF_2t_ip_src_store_index
-- Source Path: ZynqBF_2tx_fpga/channel_estimator/peakdetect_ch1/store_index
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ZynqBF_2t_ip_src_store_index IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        din                               :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        update                            :   IN    std_logic;
        dout                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END ZynqBF_2t_ip_src_store_index;


ARCHITECTURE rtl OF ZynqBF_2t_ip_src_store_index IS

  -- Signals
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL din_signed                       : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay2_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL Switch_out1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL Switch_out1_1                    : signed(15 DOWNTO 0);  -- int16

BEGIN
  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= update;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  din_signed <= signed(din);

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay2_out1 <= din_signed;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  
  Switch_out1_1 <= Switch_out1 WHEN Delay1_out1 = '0' ELSE
      Delay2_out1;

  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Switch_out1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Switch_out1 <= Switch_out1_1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  dout <= std_logic_vector(Switch_out1);

END rtl;

