-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ZynqBF_2tx_fpga\ZynqBF_2t_ip_src_select_inputs_block.vhd
-- Created: 2019-02-08 23:33:52
-- 
-- Generated by MATLAB 9.5 and HDL Coder 3.13
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ZynqBF_2t_ip_src_select_inputs_block
-- Source Path: ZynqBF_2tx_fpga/channel_estimator/ch_est/select_inputs
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ZynqBF_2t_ip_src_ZynqBF_2tx_fpga_pkg.ALL;

ENTITY ZynqBF_2t_ip_src_select_inputs_block IS
  PORT( en1                               :   IN    std_logic;
        en2                               :   IN    std_logic;
        in1                               :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
        in2                               :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
        y                                 :   OUT   vector_of_std_logic_vector16(0 TO 1)  -- sfix16_En15 [2]
        );
END ZynqBF_2t_ip_src_select_inputs_block;


ARCHITECTURE rtl OF ZynqBF_2t_ip_src_select_inputs_block IS

  -- Signals
  SIGNAL in1_signed                       : vector_of_signed16(0 TO 1);  -- sfix16_En15 [2]
  SIGNAL in2_signed                       : vector_of_signed16(0 TO 1);  -- sfix16_En15 [2]
  SIGNAL y_tmp                            : vector_of_signed16(0 TO 1);  -- sfix16_En15 [2]

BEGIN
  outputgen2: FOR k IN 0 TO 1 GENERATE
    in1_signed(k) <= signed(in1(k));
  END GENERATE;

  outputgen1: FOR k IN 0 TO 1 GENERATE
    in2_signed(k) <= signed(in2(k));
  END GENERATE;

  select_inputs_output : PROCESS (en1, en2, in1_signed, in2_signed)
  BEGIN
    --MATLAB Function 'channel_estimator/ch_est/select_inputs'
    IF (en1 AND en2) = '1' THEN 
      y_tmp <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF en1 = '1' THEN 
      y_tmp <= in1_signed;
    ELSIF en2 = '1' THEN 
      y_tmp <= in2_signed;
    ELSE 
      y_tmp <= (OTHERS => to_signed(16#0000#, 16));
    END IF;
  END PROCESS select_inputs_output;


  outputgen: FOR k IN 0 TO 1 GENERATE
    y(k) <= std_logic_vector(y_tmp(k));
  END GENERATE;

END rtl;

